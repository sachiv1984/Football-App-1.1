name: Backtest SOT Model (Poisson + ZIP)

on:
  workflow_dispatch:
    inputs:
      train_zip_model:
        description: 'Train ZIP model in addition to Poisson?'
        required: true
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  # =====================================================================
  # 0. Validate Data
  # =====================================================================
  validate_data:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: pip install -r requirements.txt
      - name: Run Data Validation
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: python src/services/ai/utils/data_validation.py
      - uses: actions/upload-artifact@v4
        with:
          name: data-validation-report
          path: |
            data_validation_report.txt
            invalid_minutes_records.csv

  # =====================================================================
  # 1. Load Data
  # =====================================================================
  load_data:
    needs: validate_data
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: pip install -r requirements.txt
      - name: Load Data from Supabase
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: python src/services/ai/data_loader.py
      - uses: actions/upload-artifact@v4
        with:
          name: raw-backtest-data
          path: |
            player_data_raw.parquet
            team_def_data_raw.parquet

  # =====================================================================
  # 2. Feature Engineering (O-Factors)
  # =====================================================================
  process_data:
    needs: load_data
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: pip install -r requirements.txt
      - uses: actions/download-artifact@v4
        with:
          name: raw-backtest-data
      - run: python src/services/ai/backtest_processor.py
      - uses: actions/upload-artifact@v4
        with:
          name: final-feature-set-o-factors
          path: final_feature_set.parquet

  # =====================================================================
  # 3. P-Factors, Scaling
  # =====================================================================
  analyze_and_scale:
    needs: process_data
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: pip install -r requirements.txt
      - uses: actions/download-artifact@v4
        with:
          name: final-feature-set-o-factors
      - run: python src/services/ai/player_factor_engineer.py
      - run: python src/services/ai/correlation_analysis.py
      - run: python src/services/ai/feature_scaling.py
      - uses: actions/upload-artifact@v4
        with:
          name: scaled-feature-set
          path: |
            final_feature_set_scaled.parquet
            training_stats.json

  # =====================================================================
  # 4a. Train Poisson Model
  # =====================================================================
  train_poisson:
    needs: analyze_and_scale
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: pip install -r requirements.txt
      - uses: actions/download-artifact@v4
        with:
          name: scaled-feature-set
      - name: Train Poisson Model
        run: python src/services/ai/backtest_model.py
      - name: Run Live Predictor (Poisson)
        env:
          MODEL_TYPE: poisson
        run: python src/services/ai/live_predictor_zip.py
      - uses: actions/upload-artifact@v4
        with:
          name: poisson-model-artifacts
          path: |
            poisson_model.pkl
            gameweek_sot_recommendations.csv

  # =====================================================================
  # 4b. Train ZIP Model (Optional)
  # =====================================================================
  train_zip:
    needs: analyze_and_scale
    if: ${{ github.event.inputs.train_zip_model == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: pip install -r requirements.txt
      - uses: actions/download-artifact@v4
        with:
          name: scaled-feature-set
      - run: python src/services/ai/zip_model_trainer.py
      - name: Run Live Predictor (ZIP)
        env:
          MODEL_TYPE: zip
        run: python src/services/ai/live_predictor_zip.py
      - uses: actions/upload-artifact@v4
        with:
          name: zip-model-artifacts
          path: |
            src/services/ai/artifacts/zip_model.pkl
            src/services/ai/artifacts/zip_training_stats.json
            gameweek_sot_recommendations.csv

  # =====================================================================
  # 5. Compare Models & Diagnostics
  # =====================================================================
  compare_and_diagnose:
    needs: [train_poisson, train_zip]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: pip install -r requirements.txt
      - uses: actions/download-artifact@v4
        with:
          name: scaled-feature-set
      - uses: actions/download-artifact@v4
        with:
          name: poisson-model-artifacts
          path: src/services/ai/artifacts/
      - uses: actions/download-artifact@v4
        if: ${{ github.event.inputs.train_zip_model == 'true' }}
        with:
          name: zip-model-artifacts
          path: src/services/ai/artifacts/
      - run: python src/services/ai/utils/model_diagnostics.py
      - run: python src/services/ai/compare_models.py
        if: ${{ github.event.inputs.train_zip_model == 'true' }}
      - uses: actions/upload-artifact@v4
        with:
          name: model-diagnostics
          path: |
            diagnostics_report.txt
            vif_results.csv
            correlation_matrix.csv
            feature_target_correlations.csv
            model_comparison_report.txt

  # =====================================================================
  # 6. Test Prediction Service
  # =====================================================================
  test_predictions:
    needs: compare_and_diagnose
    runs-on: ubuntu-latest
    strategy:
      matrix:
        model_type: [poisson, zip]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: pip install -r requirements.txt
      - uses: actions/download-artifact@v4
        with:
          name: scaled-feature-set
      - uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.model_type }}-model-artifacts
          path: src/services/ai/artifacts/
      - name: Run Prediction Service
        env:
          MODEL_TYPE: ${{ matrix.model_type }}
        run: python src/services/ai/live_predictor_zip.py
      - uses: actions/upload-artifact@v4
        with:
          name: predictions-${{ matrix.model_type }}
          path: gameweek_sot_recommendations.csv

  # =====================================================================
  # 7. Package Artifacts
  # =====================================================================
  package_artifacts:
    needs: test_predictions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: poisson-model-artifacts
      - uses: actions/download-artifact@v4
        with:
          name: zip-model-artifacts
          continue-on-error: true
      - uses: actions/download-artifact@v4
        with:
          name: scaled-feature-set
      - uses: actions/download-artifact@v4
        with:
          name: model-diagnostics
      - uses: actions/download-artifact@v4
        with:
          name: predictions-poisson
      - uses: actions/download-artifact@v4
        with:
          name: predictions-zip
          continue-on-error: true
      - run: |
          mkdir -p deployment_package/artifacts
          cp -f poisson-model-artifacts/*.pkl deployment_package/artifacts/ 2>/dev/null || true
          cp -f zip-model-artifacts/*.pkl deployment_package/artifacts/ 2>/dev/null || true
          cp -f zip-model-artifacts/*.json deployment_package/artifacts/ 2>/dev/null || true
          cp -f scaled-feature-set/training_stats.json deployment_package/artifacts/ 2>/dev/null || true
          cp -f predictions-*/*.csv deployment_package/artifacts/ 2>/dev/null || true
          cp -f model-diagnostics/*.txt deployment_package/ 2>/dev/null || true
          cp -f model-diagnostics/*.csv deployment_package/ 2>/dev/null || true
          ls -lah deployment_package/artifacts
      - uses: actions/upload-artifact@v4
        with:
          name: deployment-package
          path: deployment_package/
