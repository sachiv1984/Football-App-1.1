// scripts/rename-logos.js
// Run with: node scripts/rename-logos.js
const fs = require("fs");
const path = require("path");

const logosDir = path.join(__dirname, "../public/images/club-logos");
const outputFile = path.join(__dirname, "../src/utils/logoUtils.ts");

function slugify(name) {
  return name
    .toLowerCase()
    .replace(/&/g, "and") // replace &
    .replace(/'/g, "") // remove apostrophes
    .replace(/\./g, "") // remove periods
    .replace(/\s+/g, "-") // spaces -> dashes
    .replace(/[^a-z0-9-]/g, ""); // strip anything else
}

// Manual alias map for common variations
const MANUAL_ALIASES = {
  "Man Utd": "manchester-united",
  "Man United": "manchester-united",
  "Spurs": "tottenham-hotspur",
  "Man City": "manchester-city",
  "Nott'm Forest": "nottingham-forest",
  "Wolves": "wolverhampton-wanderers",
  "Brighton": "brighton-and-hove-albion",
  "Leeds": "leeds-united",
  "West Ham": "west-ham-united",
};

// Step 1: rename files to slugs + build base map
const mapping = {};

fs.readdirSync(logosDir).forEach((file) => {
  const ext = path.extname(file); // .png
  const base = path.basename(file, ext); // e.g. "Arsenal FC"
  const slug = slugify(base); // e.g. "arsenal-fc"
  const newFile = `${slug}${ext}`;
  const oldPath = path.join(logosDir, file);
  const newPath = path.join(logosDir, newFile);

  // Rename file if needed
  if (file !== newFile) {
    console.log(`Renaming: ${file} → ${newFile}`);
    fs.renameSync(oldPath, newPath);
  }

  // Add main name and cleaned version
  mapping[base] = slug;
  mapping[base.replace(/ FC$/i, "").replace(/ AFC$/i, "")] = slug;
});

// Step 2: inject manual aliases
for (const [alias, slug] of Object.entries(MANUAL_ALIASES)) {
  mapping[alias] = slug;
}

// Step 3: generate logoUtils.ts
const fileContent = `// ⚽ Auto-generated by scripts/rename-logos.js
// Do not edit manually — update logos in /public/images/club-logos and re-run the script.

const TEAM_LOGO_MAP: Record<string, string> = ${JSON.stringify(mapping, null, 2)};

export const getTeamLogoPath = (
  teamName: string,
  teamId?: string,
  shortName?: string
): string | null => {
  let slug = TEAM_LOGO_MAP[teamName] || (shortName && TEAM_LOGO_MAP[shortName]) || null;
  return slug ? \`/images/club-logos/\${slug}.png\` : null;
};

export const getTeamLogo = (team: { name: string; shortName?: string; id?: string }) => {
  const logoPath = getTeamLogoPath(team.name, team.id, team.shortName);

  return {
    logoPath,
    fallbackInitial: team.shortName?.charAt(0) || team.name.charAt(0),
    fallbackName: team.shortName || team.name,
  };
};
`;

fs.writeFileSync(outputFile, fileContent, "utf8");

console.log(`✅ Renamed logos and updated ${outputFile}`);
